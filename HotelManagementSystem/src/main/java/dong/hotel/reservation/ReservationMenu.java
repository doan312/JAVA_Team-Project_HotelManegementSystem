/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dong.hotel.reservation;
import dong.hotel.mainmenu.MainMenu;
import dong.hotel.check.RoomState;
import dong.hotel.mainmenu.MainMenu;
import dong.hotel.file.Sfr200Process;
import dong.hotel.file.Sfr300Process;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.util.ArrayList;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import java.util.stream.Stream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import dong.hotel.file.CustomerInforSave; // 고객 정보 저장용 
//import dong.hotel.file.PeakSeasonPayInfoSave;
import dong.hotel.file.PeakSeasonPayProcess;
import dong.hotel.login.Login;

/**
 *
 * @author nifskorea
 */
public class ReservationMenu extends javax.swing.JFrame {

    
    // -----------------------------------------------------
    private ArrayList<PeakSeasonChargeInfo> chargeInfo = new ArrayList<>();
    private ArrayList<CustomerInfor> guestInfo = new ArrayList<>();
    private ArrayList<RoomState> roomstate = new ArrayList<>();
    private ArrayList<CardInformation> cardInfo = new ArrayList<>();
    // -----------------------------------------------------------
    private int checkCardbuttona = 0; // 카드 정보 입력받았는지 체크 카운티 
    private String checkRoomNuma = "";
    private String checkPeopleNuma = "";
    private boolean isOverNuma = false; 
    static int count2 = 0; // 예약 결정여부 함수에 값 치환용 변수 
    /**
     * Creates new form ReservationMenu
     */
    public ReservationMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ShowPrice = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        FeeTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        ReservationChange = new javax.swing.JDialog();
        jLabel14 = new javax.swing.JLabel();
        valuefix = new javax.swing.JTextField();
        Close_BUTT = new javax.swing.JButton();
        BChange = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Checkinyear = new javax.swing.JComboBox<>();
        Checkinmonth = new javax.swing.JComboBox<>();
        Checkinday = new javax.swing.JComboBox<>();
        Checkoutyear = new javax.swing.JComboBox<>();
        Checkoutmonth = new javax.swing.JComboBox<>();
        Checkoutday = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        Cusname = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        printPrice_BUTT = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        phthree = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cusPeoplenum = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        RoomText = new javax.swing.JTextField();
        phtwo = new javax.swing.JTextField();
        ShowPrice_BUTT = new javax.swing.JButton();
        exMoney = new javax.swing.JLabel();
        dayout = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        BACK_BUTT = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        change_BUTT = new javax.swing.JButton();
        cuscardCa = new javax.swing.JComboBox<>();
        carNumOne = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        carNumTwo = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        carNumFor = new javax.swing.JTextField();
        carNumThree = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        carLastNuOne = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        carLastNumTwo = new javax.swing.JTextField();
        checkPersonalData = new javax.swing.JCheckBox();

        ShowPrice.setMinimumSize(new java.awt.Dimension(430, 350));

        FeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "호실", "인원", "요금", "할증요금"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(FeeTable);

        jButton4.setText("이전");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel16.setText("객실 요금표");

        javax.swing.GroupLayout ShowPriceLayout = new javax.swing.GroupLayout(ShowPrice.getContentPane());
        ShowPrice.getContentPane().setLayout(ShowPriceLayout);
        ShowPriceLayout.setHorizontalGroup(
            ShowPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowPriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ShowPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowPriceLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowPriceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );
        ShowPriceLayout.setVerticalGroup(
            ShowPriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowPriceLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ReservationChange.setMinimumSize(new java.awt.Dimension(330, 220));

        jLabel14.setText("고유 확인 번호 : ");

        Close_BUTT.setText("이전");
        Close_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Close_BUTTActionPerformed(evt);
            }
        });

        BChange.setText("수정");
        BChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReservationChangeLayout = new javax.swing.GroupLayout(ReservationChange.getContentPane());
        ReservationChange.getContentPane().setLayout(ReservationChangeLayout);
        ReservationChangeLayout.setHorizontalGroup(
            ReservationChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservationChangeLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(ReservationChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReservationChangeLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valuefix, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReservationChangeLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Close_BUTT, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BChange, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        ReservationChangeLayout.setVerticalGroup(
            ReservationChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReservationChangeLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(ReservationChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(valuefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(ReservationChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Close_BUTT)
                    .addComponent(BChange))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText(" 체크인 날짜");

        jLabel3.setText("체크아웃 날짜");

        jLabel15.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        jLabel15.setText("날짜 선택");

        Checkinyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023" }));

        Checkinmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        Checkinday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        Checkoutyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023" }));

        Checkoutmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        Checkoutday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Checkinyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Checkinmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Checkinday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Checkoutyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Checkoutmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Checkoutday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Checkinyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Checkinmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Checkinday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Checkoutyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Checkoutmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Checkoutday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        Cusname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CusnameActionPerformed(evt);
            }
        });
        Cusname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CusnameKeyTyped(evt);
            }
        });

        phone.setText("010");
        phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneKeyTyped(evt);
            }
        });

        printPrice_BUTT.setText("예상 금액 확인");
        printPrice_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printPrice_BUTTActionPerformed(evt);
            }
        });

        jLabel4.setText("인원수");

        jLabel5.setText("이름");

        jLabel6.setText("전화번호");

        jLabel1.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        jLabel1.setText("고객정보");

        phthree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phthreeKeyTyped(evt);
            }
        });

        jLabel10.setText("-");

        jLabel11.setText("-");

        cusPeoplenum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        cusPeoplenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusPeoplenumActionPerformed(evt);
            }
        });

        jLabel12.setText("호실");

        RoomText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomTextActionPerformed(evt);
            }
        });
        RoomText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RoomTextKeyTyped(evt);
            }
        });

        phtwo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phtwoKeyTyped(evt);
            }
        });

        ShowPrice_BUTT.setText("객실요금표");
        ShowPrice_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPrice_BUTTActionPerformed(evt);
            }
        });

        exMoney.setText("예상금액표시");

        dayout.setText("d");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RoomText, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Cusname, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cusPeoplenum, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(4, 4, 4)
                                        .addComponent(phtwo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(phthree, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(dayout))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ShowPrice_BUTT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exMoney)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printPrice_BUTT)
                        .addGap(15, 15, 15))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Cusname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(RoomText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cusPeoplenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(phtwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(phthree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dayout, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printPrice_BUTT)
                    .addComponent(ShowPrice_BUTT)
                    .addComponent(exMoney))
                .addContainerGap())
        );

        jButton5.setText("예약");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        BACK_BUTT.setText("이전");
        BACK_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACK_BUTTActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        jLabel7.setText("신용카드 정보");

        jLabel8.setText("카드번호");

        jLabel9.setText("은행선택");

        jLabel13.setText("유효기간");

        change_BUTT.setText("예약수정");
        change_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_BUTTActionPerformed(evt);
            }
        });

        cuscardCa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "카드선택", "국민은행", "신한은행", "농협은행", "카카오뱅크", "부산은행", "신협", "한국투자증권", "새마을금고", "BC카드" }));

        carNumOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carNumOneActionPerformed(evt);
            }
        });
        carNumOne.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carNumOneKeyTyped(evt);
            }
        });

        jLabel20.setText("-");

        carNumTwo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carNumTwoKeyTyped(evt);
            }
        });

        jLabel21.setText("-");

        carNumFor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carNumForKeyTyped(evt);
            }
        });

        carNumThree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carNumThreeKeyTyped(evt);
            }
        });

        jLabel22.setText("-");

        carLastNuOne.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carLastNuOneKeyTyped(evt);
            }
        });

        jLabel23.setText("-");

        carLastNumTwo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                carLastNumTwoKeyTyped(evt);
            }
        });

        checkPersonalData.setText("개인정보 수집 및 이용에 동의합니다.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cuscardCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(carNumOne, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(carNumTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(carNumThree, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(carNumFor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(change_BUTT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(carLastNuOne, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(carLastNumTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(BACK_BUTT, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkPersonalData)
                .addGap(37, 37, 37))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuscardCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(carNumOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(carNumTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(carNumFor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carNumThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(carLastNuOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(carLastNumTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkPersonalData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(change_BUTT)
                    .addComponent(BACK_BUTT)
                    .addComponent(jButton5))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CusnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CusnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CusnameActionPerformed

    private void RoomTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoomTextActionPerformed

    private void cusPeoplenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusPeoplenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusPeoplenumActionPerformed

    private void carNumOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carNumOneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carNumOneActionPerformed

    private void BACK_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACK_BUTTActionPerformed
        // 이전 화면 돌아가기 
        MainMenu back = new MainMenu();
        back.setVisible(true);
        dispose();
    }//GEN-LAST:event_BACK_BUTTActionPerformed

    private void ShowPrice_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPrice_BUTTActionPerformed
        // TODO add your handling code here: 객실요금 파일 불러오는 코드 추가해야함
         PeakSeasonPayProcess sa = new PeakSeasonPayProcess();

        DefaultTableModel model = (DefaultTableModel) FeeTable.getModel();
        model.setNumRows(0);

        
        sa.fRead();
        sa.sPlite();
        try {
            chargeInfo = sa.returnChargeInfo();
        } catch (IOException ex) {
            Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < chargeInfo.size(); i++) {
            model.insertRow(model.getRowCount(), new Object[]{
                chargeInfo.get(i).getRoom(),
                chargeInfo.get(i).getNumpeople(),
                chargeInfo.get(i).getRoomcharge(),
                chargeInfo.get(i).getExtractcharge(),
                chargeInfo.get(i).getMaxpele()
            });
        }
        ShowPrice.setVisible(true);//요금정보다이얼로그보여줌
    }//GEN-LAST:event_ShowPrice_BUTTActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       ShowPrice.setVisible(false);//요금정보창닫음??? <- 이거 어떤 버튼인지 확인 필요 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Close_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Close_BUTTActionPerformed
       ReservationChange.setVisible(false);
    }//GEN-LAST:event_Close_BUTTActionPerformed

    private void BChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BChangeActionPerformed
        // TODO add your handling code here: 
        //예약정보수정하여입력->수정버튼클릭->고유아이디입력->맞으면정보수정됨
       String money ,code,roomNum,namea,cusNum,cusPhonenum,inYear,inMonth,inDay,outYear,outMonth,outDay,
               cardType,cardNum,exprMonth,expYear, guarantee;
       CustomerInforSave savea = new CustomerInforSave();
        ///////////////////////////////////
        code = Integer.toString(guestInfo.size() +1); // 이건 숫자를 문자열로 변환 고객 정보 배열 사이즈 +1 해줌 스페어 공간 
       //  money = exMoney.getText(); // 예상금액 뜨는 표시부분 
        money = exMoney.getText(); // 예상금액 뜨는 표시부분 
       roomNum = RoomText.getText(); //호실 정보 가져옴
       namea = Cusname.getText();
       cusNum = cusPeoplenum.getSelectedItem().toString(); // jcombobox 값 가져오는 코드 
       cusPhonenum = phone.getText() + phtwo.getText() +phthree.getText();
        // 체크인 체크아웃 처리 부분 
        inYear = Checkinyear.getSelectedItem().toString();
        inMonth = Checkinmonth.getSelectedItem().toString();
        inDay = Checkinday.getSelectedItem().toString();
        //여기서 부터 체크아웃 
        outYear = Checkoutyear.getSelectedItem().toString();
        outMonth = Checkoutmonth.getSelectedItem().toString();
        outDay = Checkoutday.getSelectedItem().toString();
        cardType = cuscardCa.getSelectedItem().toString();
        cardNum = carNumOne.getText() + carNumTwo.getText() + carNumThree.getText() + carNumFor.getText();
        exprMonth  = carLastNuOne.getText(); 
           expYear = carLastNumTwo.getText(); //유효기간 
        /////////////////////////////////
       int counting = 1;
           String customInfo;
          
           Sfr200Process a = new Sfr200Process();
        a.fRead();
    //  a.sPlite();
        code = valuefix.getText();
                


        try {  // 객체복사 
            a.sPlite();
            guestInfo = a.returnGuestInfo();
            System.out.println(guestInfo.size());
            for(int i = 0 ; i<guestInfo.size(); i++)
            System.out.println("배열상탕확인 : " +guestInfo.get(i).toString());
        } catch (IOException ex) {
            Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
 if (code.isEmpty()) {
            JOptionPane.showMessageDialog(null, "예약 수정을 원한다면 고유ID와 바꿀정보를 입력해야합니다.");
            counting = 0;
        }

        if (counting == 1) {
            for (int i = 0; i < guestInfo.size(); i++) {
             //System.out.println(guestInfo.get(i).getcInDay().equals(inDay));
               if( guestInfo.get(i).getChechkNum().equals(code)){ // 이줄빠졌음
                if (!guestInfo.get(i).getcInYear().equals(inYear) || !guestInfo.get(i).getcInMonth().equals(inMonth) || !guestInfo.get(i).getcInDay().equals(inDay)
                        || !guestInfo.get(i).getcOutYear().equals(outYear) || !guestInfo.get(i).getcOutMonth().equals(outMonth) || !guestInfo.get(i).getcOutDay().equals(outDay)) {
                    JOptionPane.showMessageDialog(null, "날짜는 변경하실 수 없습니다.");
                    counting = 4;
                    break;
                }
            }
        }
        }
        for (int i = 0; i < guestInfo.size(); i++) {
            if (!guestInfo.get(i).getRoomNum().equals(roomNum)) {
                try {
                    SimpleDateFormat format = new SimpleDateFormat("yyyy|mm|dd");
                    String InDate = inYear + "|" + inMonth + "|" + inDay;
                    String OutDate = outYear + "|" + outMonth + "|" + outDay;

                    int compare1 = 0;
                    int compare2 = 0;
                    int compare3 = 0;
                    int compare4 = 0;
 // 이거 꼭 중첩 for문써야함?
                    for (int j = 0; j < guestInfo.size(); j++) {
                        if (guestInfo.get(j).getRoomNum().equals(roomNum)) {
                            String bookIn = guestInfo.get(j).getcInYear() + "|" + guestInfo.get(j).getcInMonth() + "|" + guestInfo.get(j).getcInDay();
                            String bookOut = guestInfo.get(j).getcOutYear() + "|" + guestInfo.get(j).getcOutMonth() + "|" + guestInfo.get(j).getcOutDay();

                            Date guestdate = format.parse(bookIn);
                            compare1 = InDate.compareTo(bookIn);
                            compare2 = InDate.compareTo(bookOut);
                            compare3 = OutDate.compareTo(bookIn);
                            compare4 = OutDate.compareTo(bookOut);
//System.out.println(bookIn);
//System.out.println(bookOut);
//System.out.println(InDate);
//System.out.println(OutDate);
                           /* if (compare1 < 0 && compare2 < 0 && compare3 < 0 && compare4 < 0) {

                            } else if (compare1 < 0 && compare2 < 0 && compare3 == 0 && compare4 < 0) {

                            } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                                counting = 0;
                            } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                                counting = 0;
                            } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                                counting = 0;
                            } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                                counting = 0;
                            } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                                counting = 0;
                            } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                                counting = 0;
                            } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                                counting = 0;
                            } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                                counting = 0;
                            } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                                counting = 0;
                            } else if (compare1 > 0 && compare2 == 0 && compare3 > 0 && compare4 > 0) {

                            } else if (compare1 > 0 && compare2 > 0 && compare3 > 0 && compare4 > 0) {

                            }*/
                        }
                    }
                    if (counting == 0) {
                       JOptionPane.showMessageDialog(null, "예약된 방입니다.");
                    }
                } catch (ParseException e) {
                }
            }
        }
          // 방번호가 같을때만 예약정보를 수정할수있어야한다 값이나 정보는 아주 잘나오고 배열문제 없는데 
          // 지금 안보여서 제대로 안넘어가는이유가 같은방번호일때만 수정 같다면 : 덮어쓰게 비었을때 하라이게 아님 걍 가져와서 덮어써야해 
          //게스트 인포에다가 = 지금 텍스트 파일  // 덮어쓰기할 1개 / 이전 변경안하는 정보는 그대로 출력해야함 
          // 그정보 수정 해당 방번호의 인덱스정보를 이용해서 그거를 정보를 바꿔야함 (i까진 맞아) 
         
          int checkroomcount = 0;
        try {
            System.out.println(guestInfo.size());
            for (int i = 0; i < guestInfo.size(); i++) {
                if (counting == 1) {
                   // System.out.println(guestInfo.get(i).getChechkNum());
                   // 고유번호 = 방번호 같은지 만약에 같지않다면 나머지를 출력하라 
                     code = guestInfo.get(i).getChechkNum();
                  namea = guestInfo.get(i).getName();
                       roomNum = guestInfo.get(i).getRoomNum();
                       cusNum = guestInfo.get(i).getCustomerNum();
                       cusPhonenum = guestInfo.get(i).getPhoneNum();
                       inYear = guestInfo.get(i).getcInYear();
                       inMonth = guestInfo.get(i).getcInMonth();
                       inDay = guestInfo.get(i).getcInDay();
                       outYear = guestInfo.get(i).getcOutYear();
                       outMonth = guestInfo.get(i).getcOutMonth();
                       outDay = guestInfo.get(i).getcOutDay();
                       money = guestInfo.get(i).getRoomPrice();
                       cardType = guestInfo.get(i).getCard();
                       cardNum=guestInfo.get(i).getCardNum();
                       exprMonth = guestInfo.get(i).getEndMonth();
                       expYear = guestInfo.get(i).getEndYear();
                       guarantee = guestInfo.get(i).getGuarantee();
                       //////////////////////////////////////////////
                        String roomNuma = RoomText.getText(); //호실 정보 가져옴
                        String codeas = valuefix.getText();
                       // 안된 이유 : 위에서 새값을 들고오는ㄴ데 내가 원하는 입력값 비교 계속 새로운 값 들고오니 계속 조건 만족됨 
                   if(guestInfo.get(i).getChechkNum().equals(codeas)){ // 정보가 같을 때 수정해라 
                       System.out.println("조건1");
                       if(guestInfo.get(i).getRoomNum().equals(roomNuma)){
                             System.out.println("조건2");
                        // 여기에 같은 방번호일때만 정보변겨하는 코드 고민 값을 바꿀라면 바꾼값을 그대로 넘기면됨파일
                        ///////////////////////////////
                        namea = Cusname.getText();
                        money = exMoney.getText(); // 예상금액 뜨는 표시부분 
                       roomNum = RoomText.getText(); //호실 정보 가져옴
                       cusNum = cusPeoplenum.getSelectedItem().toString(); // jcombobox 값 가져오는 코드 
                       cusPhonenum = phone.getText() + phtwo.getText() +phthree.getText();
                       cardType = cuscardCa.getSelectedItem().toString();
                       exprMonth  = carLastNuOne.getText(); 
                        expYear = carLastNumTwo.getText(); //유효기간 
                        //여기서 부터 체크아웃
                        ////////////////////////////////
                        //버튼안누르면 머라한9)다 
                        if(namea.isEmpty()){
                            System.out.println("이름을 입력해주세요  ");
                           // count = 5;
                        }else if(roomNum.isEmpty()){
                            System.out.println("호실을 입력해주세요 ");
                        }
                        else if(cusPhonenum.isEmpty()){
                            System.out.println("휴대폰 정보를 입력해주세요  ");
                        }
                        else if(cardNum.isEmpty()){
                            System.out.println("카드번호를 입력해주세요  ");
                        }
                        else if(exprMonth.isEmpty()){
                             System.out.println("유효기간(월)을 입력해주세요  ");
                        }else if(expYear.isEmpty()){
                             System.out.println("유효기간 (년) 을 입력해주세요 ");
                        }
                         if (money.equals("예상금액표시")) {
                           money = guestInfo.get(i).getRoomPrice();
                           
                       
                        }
                        if (namea.isEmpty()) {
                           //  System.out.println("이름을 입력해주세요  ");
                            namea = guestInfo.get(i).getName();
                            //if(namea.isEmpty()){
                                //namea ="이름공백";
                           /// }
                            
                        }
                        if (roomNum.isEmpty()) {
                            roomNum = guestInfo.get(i).getRoomNum();
                            
                        }
                        if (roomNum.equals("1")) {
                            roomNum = guestInfo.get(i).getCustomerNum();
                             
                        }
                        if (cusPhonenum.equals("010")) {
                            cusPhonenum = guestInfo.get(i).getPhoneNum();
                        }
                         if (cusPhonenum.isEmpty()) {
                            cusPhonenum = guestInfo.get(i).getPhoneNum();
                        }
                        if (cardType.equals("카드선택")) {
                            checkCardbuttona = 0;
                                System.out.println("카드정보가 없습니다 ");
                        }else{
                        
                            checkCardbuttona = 1;
                            System.out.println("카드정보 있음");
                        }
                        if (checkCardbuttona == 1) {
                             cardType = cuscardCa.getSelectedItem().toString();
                            cardNum = carNumOne.getText() + carNumTwo.getText() + carNumThree.getText() + carNumFor.getText();
                            exprMonth  = carLastNuOne.getText(); 
                               expYear = carLastNumTwo.getText(); //유효기간 
           guarantee = "보증고객";
        } else {
            cardType = "카드없음";
            cardNum = "카드없음";
            exprMonth = "MM";
            expYear = "YYYY";
            guarantee = "예약고객";
        }
                        
                        savea.InputGuest(code,namea,roomNum,cusNum,cusPhonenum,inYear,inMonth,inDay,outYear,outMonth,outDay,money,cardType,
                      cardNum,exprMonth,expYear,guarantee);
              String ha = code+namea+roomNum+cusNum+cusPhonenum+inYear+inMonth+inDay+outYear+outMonth+outDay+money+cardType+
                     cardNum+exprMonth+expYear+guarantee;
           //  System.out.println(ha);
                        // 이거값보고 이게 맞으면 이걸 더넣어야함 
                      
                        JOptionPane.showMessageDialog(null, "예약 수정");
                    }
                    else {
                        // 방번호가 같지않을때는 그냥 출력 (호실이다르면)
                        JOptionPane.showMessageDialog(null, "방은 변경할수없습니다.  ");
                         checkroomcount = 4; // 수정불가코드 
                    }
                   }else {// 인덱스 번호가 다르면 이전에그대로 기록 
                       if(checkroomcount !=4){
                      savea.InputGuest(code,namea,roomNum,cusNum,cusPhonenum,inYear,inMonth,inDay,outYear,outMonth,outDay,money,cardType,
                      cardNum,exprMonth,expYear,guarantee);
              String ha = code+namea+roomNum+cusNum+cusPhonenum+inYear+inMonth+inDay+outYear+outMonth+outDay+money+cardType+
                     cardNum+exprMonth+expYear+guarantee;
                       }
                   }
                    /*else if(!guestInfo.get(i).getChechkNum().equals(code))  { // 인덱스 번호가 같으면 정보를 바꿔서 업데이트해라 
                        if (money.isEmpty()) {
                           money = guestInfo.get(i).getRoomPrice();
                       
                        }
                        if (namea.isEmpty()) {
                            namea = guestInfo.get(i).getName();
                            
                        }
                        if (roomNum.isEmpty()) {
                            roomNum = guestInfo.get(i).getRoomNum();
                            
                        }
                        if (roomNum.equals("1")) {
                            roomNum = guestInfo.get(i).getCustomerNum();
                             
                        }
                        if (cusPhonenum.equals("")) {
                            cusPhonenum = guestInfo.get(i).getPhoneNum();
                             
                        }
                        
                        savea.InputGuest(code,namea,roomNum,cusNum,cusPhonenum,inYear,inMonth,inDay,outYear,outMonth,outDay,money,cardType,
                      cardNum,exprMonth,expYear,guarantee);
              String ha = code+namea+roomNum+cusNum+cusPhonenum+inYear+inMonth+inDay+outYear+outMonth+outDay+money+cardType+
                     cardNum+exprMonth+expYear+guarantee;
             System.out.println(ha);
                        // 이거값보고 이게 맞으면 이걸 더넣어야함 
                      
                        JOptionPane.showMessageDialog(null, "예약 수정");
                        
                       // Because.setVisible(true);
                    }*/
                   
                   
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ReservationChange.setVisible(false);//수정완료시 완료 / 실패시 실패 다이얼ㄹ로그뜨도록
    }//GEN-LAST:event_BChangeActionPerformed

    private void change_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_BUTTActionPerformed
        // 예약 수정 화면 버튼 
        ReservationChange.setVisible(true);
    }//GEN-LAST:event_change_BUTTActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        // 예약하기 버튼 코드
       Sfr200Process filea = new Sfr200Process();
       Sfr300Process filea2 = new Sfr300Process();
       /*                */
       filea.fRead();
       filea2.fRead();
       
       int count = 1 ; // 처리 카운트에따라 작동 
       /* 정보 비교 용도 변수 */
       int compare1 = 0 ;
       int compare2 = 0;
       int compare3 = 0;
       int compare4 = 0;
       int compare5 = 0;
       int compare6 = 0;
         int compare7 = 0;
         int compare8 = 0;
       
       try { // 11/25 오류 발생 
           filea.sPlite(); // 이코드에서 오류 발생 
           filea2.sPlite();
           guestInfo = filea.returnGuestInfo(); // 객체값 복사하는 과정 
           roomstate = filea2.returnRoomState(); //객체값 복사하는 과정 
       }catch (IOException e){
            Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, e);
       }
       /* guestinfomation정보 save 하기위한 지역 변수 선언 */ 
       CustomerInforSave save = new  CustomerInforSave(); /// 고객정보 호출 
       
       /* 고객 정보 임시  저장용 변수 */ 
        // -> 메소드 생성시 낙터법 및 소문자 -> 대문자 문법규칙 준수 
       String customInfo; String code;  String name; String roomNum;  String cusNum; String cusPhonenum;    String inYear ,inMonth,inDay; // 1차
       String outYear,outMonth,outDay; String cardType;   String cardNum;  String guarantee; String exprMonth; String expYear;   String money;//2차 
       
       /* 다이얼 로그에서 값 불러들임 */
       money = exMoney.getText(); // 예상금액 뜨는 표시부분 
       code = Integer.toString(guestInfo.size() +1); // 이건 숫자를 문자열로 변환 고객 정보 배열 사이즈 +1 해줌 스페어 공간 
       roomNum = RoomText.getText(); //호실 정보 가져옴
       name = Cusname.getText();
       cusNum = cusPeoplenum.getSelectedItem().toString(); // jcombobox 값 가져오는 코드 
       cusPhonenum = phone.getText() + phtwo.getText() +phthree.getText();
        // 체크인 체크아웃 처리 부분 
        inYear = Checkinyear.getSelectedItem().toString();
        inMonth = Checkinmonth.getSelectedItem().toString();
        inDay = Checkinday.getSelectedItem().toString();
        //여기서 부터 체크아웃 
        outYear = Checkoutyear.getSelectedItem().toString();
        outMonth = Checkoutmonth.getSelectedItem().toString();
        outDay = Checkoutday.getSelectedItem().toString();
        // 다이얼 로그 입력 종료  아래 추가 정보 합산 
        String inDatea = inYear + "|" +   inMonth + "|" + inDay;
        String outDatea = outYear + "|" +  outMonth  + "|" +  outDay ;
        // 캘린더 처리 
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
       int month = cal.get(Calendar.MONTH)+1; //달력시 0부터 시작해서 1부터로 올려주고 시작 
        int day = cal.get(Calendar.DAY_OF_MONTH); //달기준으로 날출력 
        String syear = Integer.toString(year);
        String smonth = Integer.toString(month);
        String sday = Integer.toString(day);
        if(sday.length() <=1){ // 문자열 비교시 오류로인한 예외 잡기위한 코드 12.01
          //String tempa ;
            sday= "0"+sday;
        }
        String today = syear + "|" +  smonth + "|" +  sday; //(오늘 날짜 출력 )
        /* 숫자 작게 입력했을때 오류일으키는 예외 처리 */
              String roomNuma, nameaa , cusPhonenuma ,cusPhonenum2a,cusPhonenum3a,cardNuma,cardNum2a,cardNum3a,cardNum4a,exprMontha,expYeara;
        roomNuma = RoomText.getText(); //호실 정보 가져옴
       nameaa = Cusname.getText(); // 이름
       cusPhonenuma = phone.getText() ; //전화번호 1
        cusPhonenum2a=phtwo.getText() ; // 전화번호 2 
        cusPhonenum3a=phthree.getText();// 전화번호 3 
        cardNuma = carNumOne.getText() ;
        cardNum2a   =     carNumTwo.getText() ;
        cardNum3a    =    carNumThree.getText() ;
        cardNum4a    =    carNumFor.getText();
        exprMontha  = carLastNuOne.getText(); 
           expYeara = carLastNumTwo.getText(); //유효기간 
     if(roomNuma.length() >4){
          JOptionPane.showMessageDialog(null, "호실은 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(nameaa.length()>4){
          JOptionPane.showMessageDialog(null, "이름입력은 최대 4자리까지 가능합니다.");
          count =5;
     }else if(cusPhonenuma.length() >4){
          JOptionPane.showMessageDialog(null, "휴대폰번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(cusPhonenum2a.length() >4){
          JOptionPane.showMessageDialog(null, "휴대폰번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(cusPhonenum3a.length() >4){
          JOptionPane.showMessageDialog(null, "휴대폰번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(cardNuma.length() >4){
          JOptionPane.showMessageDialog(null, "카드번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }
     else if(cardNum2a.length() >4){
          JOptionPane.showMessageDialog(null, "카드번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(cardNum3a.length() >4){
          JOptionPane.showMessageDialog(null, "카드번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(cardNum4a.length() >4){
          JOptionPane.showMessageDialog(null, "카드번호는 최대 4자리까지 입력가능합니다.");
          count =5;
     }else if(exprMontha.length() >2){
          JOptionPane.showMessageDialog(null, "카드유효기간(월)은 최대 2자리까지 입력가능합니다.");
          count =5;
     }else if(expYeara.length() >2){
          JOptionPane.showMessageDialog(null, "카드유효기간(년)은 최대 2자리까지 입력가능합니다.");
          count =5;
     }
           
        /* 카드 운영 로직 별도 함수로 처리 및 호출 아래 들어감 */ 
        cardworkingproce();
        
        if(checkCardbuttona ==1 ){ // 보증고객인지 예약고객인지 식별 
           //신용카드부분
           System.out.println("조건문 통과상태확인 ");
        cardType = cuscardCa.getSelectedItem().toString();
        cardNum = carNumOne.getText() + carNumTwo.getText() + carNumThree.getText() + carNumFor.getText();
        exprMonth  = carLastNuOne.getText(); 
           expYear = carLastNumTwo.getText(); //유효기간 
           guarantee = "보증고객";
        }
        else{
            cardType = "카드없음";
            cardNum = "카드없음";
            exprMonth ="MM";
            expYear ="YYYY";
            guarantee ="예약고객";
        }
        
        // 고객정볻 데이터 합산 
        //데이터 잘못된거임 아래 다시 타입 수정함 
        /*customInfo = code + "|" + name + "|" + roomNum + "|" +inYear + "|" +inMonth + "|" + inDay + "|" + outYear + "|" + outMonth + "|" + outDay + "|" +cusNum+ "|" +
                cusPhonenum+"|"+cardType + "|"+ exprMonth +"|"+expYear+"|"+guarantee+"|"+money+"|"; // cus num 중복으로 2번들어감  나머지 체크후 필요시 들어가야함 
              // 합산 완료 
              /* 버그로 인해 다시 덤프작성 */
     /*  if(filea.getEmptyfilech() ==1 ){
           code ="0";
       }
       else if (filea.getEmptyfilech()==2) {
           
       }*/
        
             customInfo = code + "|" + name + "|" + roomNum + "|" + cusNum + "|" + cusPhonenum + "|" + inYear + "|" + inMonth + "|" + 
                      inDay + "|" + outYear + "|" + outMonth + "|" + outDay + "|" + money + "|" + cardType + "|" + cardNum+ "|" +
                      exprMonth + "|" +expYear+ "|" +guarantee+ "|";
             
                    
        try { 
            for(int i =0 ; i<guestInfo.size(); i++){
                  System.out.println("일단 조건문 들어감 ");
                 if (guestInfo.get(i).getRoomNum().equals(roomNum)) {
                String bookIn = guestInfo.get(i).getcInYear() + "|" + guestInfo.get(i).getcInMonth() + "|" + guestInfo.get(i).getcInDay() + "|";
                String bookout = guestInfo.get(i).getcOutYear() + "|" + guestInfo.get(i).getcOutMonth()+ "|" + guestInfo.get(i).getcOutDay()+"|";
                // 부킹인 부킹 아웃 날짜 설정 
                System.out.println(bookIn);
                 System.out.println(bookout);
                compare1 =inDatea.compareTo(bookIn);
                 System.out.println(compare1);
                 compare2 =inDatea.compareTo(bookout);
                  System.out.println(compare2);
                 compare3 =outDatea.compareTo(bookIn); // 입력된 데이터랑 그리고 파일로 불러온 코드 맞는지 비교 비교하고 동일하면 넘기겠죵
                  System.out.println(compare3);
                 compare4 =outDatea.compareTo(bookout);
                  System.out.println(compare4);
                 
                  if (compare1 < 0 && compare2 < 0 && compare3 < 0 && compare4 < 0) { // 각 예약 상황별 0초기화 및 예외 처리 
//체크 아웃날짜 보다 뒤고 (날짜 애러 잡는 코드 ) 
                    } else if (compare1 < 0 && compare2 < 0 && compare3 == 0 && compare4 < 0) {

                    } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                        count = 0;
                    } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                        count = 0;
                    } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                        count = 0;
                    } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 < 0) {
                        count = 0;
                    } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                        count = 0;
                    } else if (compare1 == 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                        count = 0;
                    } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                        count = 0;
                    } else if (compare1 < 0 && compare2 < 0 && compare3 > 0 && compare4 == 0) {
                        count = 0;
                    } else if (compare1 > 0 && compare2 < 0 && compare3 > 0 && compare4 > 0) {
                        count = 0;
                    } else if (compare1 > 0 && compare2 == 0 && compare3 > 0 && compare4 > 0) {

                    } else if (compare1 > 0 && compare2 > 0 && compare3 > 0 && compare4 > 0) {

                    }
                  // 오류가능성이있음1
                   if(Integer.parseInt(cusNum)>Integer.parseInt(chargeInfo.get(i).getNumpeople())) { // 아직 성수기 미구현으로 에러 남  문자열로 변환 
                        isOverNuma=true;   // 고객인원수가 클래스에 기록된거보다 더많은 인원이 들어오면 넘어가는거에 기록 
                   }
                 }
            }
        }catch (Exception e){ } //위에 처리후 애러가 날경우 에러 처리 
        
        compare5 = inDatea.compareTo(today); //오늘날짜  
        System.out.println(today);
        System.out.println(inDatea);
        compare7 = outDatea.compareTo(today); //오늘날짜 
        //System.out.println(inDatea);
        //System.out.println(today);
       compare6 = inDatea.compareTo(outDatea);// 애는 체크아웃 
      // compare8 = outDatea.compareTo(inDatea);
       System.out.println("컴페어값6 : "+compare6);
      //  System.out.println(compare5);
       if(compare5<0){ // 날자를 잘못입력한경우 변수 0보다 작은경우  채크인 
           count = 2; 
           
       }
       System.out.println(compare7);
       if(compare7 <0){ // 체크아웃 
            count = 2; 
       } // 체크인 체크아웃은 현재날자보다는 뒤여야하고 그러면서 체크인 날짜보다 체크아웃날짜가 뒤여야함 
       // 따라서 조건문은 반드시 3중 조건문으로 들어가야할듯 
      System.out.println(compare6);
       if(compare6 >=0){ // 0보다 같거나 체크아웃날짜가 큰경우  애는 한번 봐야할듯 
           count =2;
           
       } 
        // 날짜 및 예약 파일 처리부분 오류 및 버그 수정 완료 11 . 25
       if(roomNum.isEmpty()){
           // JOptionPane.showMessageDialog(null, "호실을 입력해주세요.");
            roomNum="99";
       }
         int tema = Integer.parseInt(roomNum);
       if(tema <=100){
           JOptionPane.showMessageDialog(null, "없는 호실입니다 호실은 101번부터 시작입니다 .");
           count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }else if (tema == 99){
           
       }
       else if(count ==0 ){
             JOptionPane.showMessageDialog(null, "예약된 방입니다 다른방을 확인해주세요.");
              count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }
       else if(count ==2){
            JOptionPane.showMessageDialog(null, "날짜를 잘못입력하셨습니다 재입력 하십시오.");
             count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       /*else if(count2 == 3){
         /*   JOptionPane.showMessageDialog(this, "정확하게 입력해주세요 입력값이 유효하지않습니다.", "카드 오류",
                    JOptionPane.ERROR_MESSAGE);*/
            //count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       //}
       } else if(count2 == 4){
           JOptionPane.showMessageDialog(this, "개인정보 수집 및 이용에 대해 "+ "동의하지않으면 예약을진행할수 없습니다.", "오류발생",JOptionPane.ERROR_MESSAGE);
           count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
           
       }else if (nameaa.isEmpty()){
           JOptionPane.showMessageDialog(null, "이름을 입력해주세요.");
            count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }
       else if (cusPhonenum2a.isEmpty()){
           JOptionPane.showMessageDialog(null, "전화번호를 올바르게 입력해주세요. ");
            count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }
       else if (cusPhonenum3a.isEmpty()){
           JOptionPane.showMessageDialog(null, "전화를 올바르게 입력해주세요 .");
            count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }
       else if (money.equals("예상금액표시")){
           JOptionPane.showMessageDialog(null, "예상금액버튼을 눌러 금액을 확인해주세요 .");
            count =5 ; // 입력을 수행할수없게 임의로 지정한 코드 
       }
           roomNuma = RoomText.getText(); //호실 정보 가져옴
       nameaa = Cusname.getText(); // 이름
       cusPhonenuma = phone.getText() ; //전화번호 1
        cusPhonenum2a=phtwo.getText() ; // 전화번호 2 
        cusPhonenum3a=phthree.getText();// 전화번호 3 
        money = exMoney.getText(); // 예상금액 뜨는 표시부분 
    if (isOverNuma == true) { //인원수가 클래스보다 많을경우 
            JOptionPane.showMessageDialog(null, "해당 호실의 최대 인원수를 초과합니다.");
            count = 0; // 오류나는경우 카운팅 초기화 
        }
        if (count == 1) { // 카운팅 1경우 고객 예약 정보 기록 나머지는 예외 경우 
           try {
               save.AddCustom(customInfo);// 고객정보 넘겨주는거  아직 세이브쪽 미구현 에러남 
               //System.out.println(customInfo);
                JOptionPane.showMessageDialog(null, "해당 예약이 기록되었습니다.");
                cardInfo.clear();
            } catch (IOException ex) { // 에러 발생이유 위에 미구현으로 인한 에러임 
                Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
       
        // 예약 버튼눌렀을시 이벤트 1차 처리완료 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void printPrice_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printPrice_BUTTActionPerformed
        // TODO add your handling code here:
        // 예상 금액확인 버튼 
         // 이거 일단 보류 표부터 먼저 가져온다음 진행 
        PeakSeasonPayProcess sa = new PeakSeasonPayProcess();
       
        int num = 0; //호실정보 방번호
        int inYear = Integer.parseInt(Checkinyear.getSelectedItem().toString());
        int inMonth = Integer.parseInt(Checkinmonth.getSelectedItem().toString());
        int inDay = Integer.parseInt(Checkinday.getSelectedItem().toString());
        int outYear = Integer.parseInt(Checkoutyear.getSelectedItem().toString());
        int outMonth = Integer.parseInt(Checkoutmonth.getSelectedItem().toString());
        int outDay = Integer.parseInt(Checkoutday.getSelectedItem().toString());
         String roomNum = RoomText.getText(); //호실 정보 가져옴
        checkRoomNuma = RoomText.getText();
       checkPeopleNuma = cusPeoplenum.getSelectedItem().toString();
       //if (checkRoomNuma.isEmpty()){
         //  checkRoomNuma = "0"; // 예외처리 
       //}
      // else {
               num = Integer.parseInt(checkRoomNuma);
    //}
        //System.out.println(checkRoomNuma);
System.out.println(checkRoomNuma);
       exMoney.setText(""); 
       dayout.setText("");
       Calendar fir = new GregorianCalendar(inYear, inMonth, inDay);
        Calendar sec = new GregorianCalendar(outYear, outMonth, outDay);
         long difsec = (sec.getTimeInMillis() - fir.getTimeInMillis()) / 1000; //두개 날짜간 차를 구하는거 
        long difday = difsec / (24 * 60 * 60) + 1;
System.out.println("difsec : "+difsec);
System.out.println("difday" + difday);

 exMoney.setForeground(Color.black);
int overnum =0; int extrapay =0;
long pay =0; isOverNuma = false;

 if (RoomText.getText().isEmpty()) {
      exMoney.setForeground(Color.red);
            exMoney.setText("호실이 입력되지 않았습니다.");
            //바로 다이렉트로 출력 
        }
     int tema = Integer.parseInt(roomNum);
       if(tema <=100){
           JOptionPane.showMessageDialog(null, "없는 호실입니다 호실은 101번 부터 시작입니다.");
       }
 sa.fRead();
sa.sPlite();
try {
  chargeInfo = sa.returnChargeInfo() ; // 객체 복사 
    
}catch(IOException e ){
    Logger.getLogger(ReservationMenu.class.getName()).log(Level.SEVERE, null, e);
}

for (int i = 0; i < chargeInfo.size(); i++) {
            if (difday <= 1) {
               exMoney.setText("날짜를 재입력 하세요.");
                dayout.setText("");
            }
            if (chargeInfo.get(i).getRoom() == num) {
               dayout.setText("숙박일수"+ difday + "일 ");
                if (Integer.parseInt(checkPeopleNuma) <= Integer.parseInt(chargeInfo.get(i).getNumpeople())) {
                    pay = difday * (Long.parseLong(chargeInfo.get(i).getRoomcharge()));
                  //  possibleNum.setText("");
                   exMoney.setText(Long.toString(pay));
                } else if (Integer.parseInt(checkPeopleNuma) > Integer.parseInt(chargeInfo.get(i).getNumpeople())) {
                   exMoney.setText("해당 호실의 최대 인원 수는 " + chargeInfo.get(i).getNumpeople() + "명 입니다.");
                    isOverNuma = true; //인원수 초과 
                    //exMoney.setText("재입력");
                    dayout.setText("");
                    break;
                } else if (Integer.parseInt(checkPeopleNuma) > Integer.parseInt(chargeInfo.get(i).getNumpeople()) && Integer.parseInt(checkPeopleNuma) <= Integer.parseInt(chargeInfo.get(i).getNumpeople())) {
                    overnum = Integer.parseInt(checkPeopleNuma) - Integer.parseInt(chargeInfo.get(i).getNumpeople());
                    extrapay = Integer.parseInt(chargeInfo.get(i).getExtractcharge()) * overnum;
                    pay = difday * (Long.parseLong(chargeInfo.get(i).getRoomcharge()) );  // 추가요금 처리안하기로 함 
                            //+ extrapay);
                    //possibleNum.setText("");
                    exMoney.setText(Long.toString(pay));
                }
            }
        }

        
    }//GEN-LAST:event_printPrice_BUTTActionPerformed

    private void RoomTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RoomTextKeyTyped
        // TODO add your handling code here:
        if (RoomText.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_RoomTextKeyTyped

    private void CusnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CusnameKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CusnameKeyTyped

    private void phoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyTyped
        // TODO add your handling code here:
         if (phone.getText().length() == 3 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_phoneKeyTyped

    private void phtwoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phtwoKeyTyped
        // TODO add your handling code here:
         if (phtwo.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_phtwoKeyTyped

    private void phthreeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phthreeKeyTyped
        // TODO add your handling code here:
         if (phthree.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_phthreeKeyTyped

    private void carNumOneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carNumOneKeyTyped
        // TODO add your handling code here:
         if (carNumOne.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carNumOneKeyTyped

    private void carNumTwoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carNumTwoKeyTyped
        // TODO add your handling code here:
         if (carNumTwo.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carNumTwoKeyTyped

    private void carNumThreeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carNumThreeKeyTyped
        // TODO add your handling code here:
         if (carNumThree.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carNumThreeKeyTyped

    private void carNumForKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carNumForKeyTyped
        // TODO add your handling code here:
         if (carNumFor.getText().length() == 4 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carNumForKeyTyped

    private void carLastNuOneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carLastNuOneKeyTyped
        // TODO add your handling code here:
         if (carLastNuOne.getText().length() == 2 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carLastNuOneKeyTyped

    private void carLastNumTwoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carLastNumTwoKeyTyped
        // TODO add your handling code here:
         if (carLastNumTwo.getText().length() == 2 || !(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_carLastNumTwoKeyTyped

    /* 카드 처리 함수 */ 
    private void cardworkingproce() {
        Login checkisps = new Login();
       
        int logintypecheck = 0;
        String loginuser = ""; // 관리자인지 사용자인지 
       String  cardType = cuscardCa.getSelectedItem().toString();
        String cardNum = carNumOne.getText() + "-"+ carNumTwo.getText() +"-" + carNumThree.getText() +"-" + carNumFor.getText();
        String exprMonth  = carLastNuOne.getText(); 
          String  expYear = carLastNumTwo.getText(); //유효기간 
          CardInformation getcard = new CardInformation(cardType, cardNum, exprMonth, expYear); // 카드 클래스에 정보넘김 
           if (cardType.equals("카드선택") || cardNum.length() <= 18
                || exprMonth.equals("MM") || expYear.equals("YYYY")) {
                         count2 = 3;
                         System.out.println("카드정보없음");
                         checkCardbuttona =0;
           }else {
               checkCardbuttona = 1 ;
           }
            if (!checkPersonalData.isSelected()) {
                count2 =4;  // 예약 진행할지 말지 결정하음는 코드 
            }
             else if (checkPersonalData.isSelected()){
                 logintypecheck = checkisps.getLogintypestate();
                 if(logintypecheck == 0 )
                 {
                     loginuser = "관리자";
                 }
                 else if (logintypecheck == 1 ){
                     loginuser = "직원";
                 }
                 //JOptionPane.showMessageDialog(this, loginuser+ "님이 개인정보 이용을 동의하셨습니다. " , "개인정보",JOptionPane.INFORMATION_MESSAGE);
                 cardInfo.add(getcard);
                 count2 =1;
                 
          
             }
            
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BACK_BUTT;
    private javax.swing.JButton BChange;
    private javax.swing.JComboBox<String> Checkinday;
    private javax.swing.JComboBox<String> Checkinmonth;
    private javax.swing.JComboBox<String> Checkinyear;
    private javax.swing.JComboBox<String> Checkoutday;
    private javax.swing.JComboBox<String> Checkoutmonth;
    private javax.swing.JComboBox<String> Checkoutyear;
    private javax.swing.JButton Close_BUTT;
    private javax.swing.JTextField Cusname;
    private javax.swing.JTable FeeTable;
    private javax.swing.JDialog ReservationChange;
    private javax.swing.JTextField RoomText;
    private javax.swing.JDialog ShowPrice;
    private javax.swing.JButton ShowPrice_BUTT;
    private javax.swing.JTextField carLastNuOne;
    private javax.swing.JTextField carLastNumTwo;
    private javax.swing.JTextField carNumFor;
    private javax.swing.JTextField carNumOne;
    private javax.swing.JTextField carNumThree;
    private javax.swing.JTextField carNumTwo;
    private javax.swing.JButton change_BUTT;
    private javax.swing.JCheckBox checkPersonalData;
    private javax.swing.JComboBox<String> cusPeoplenum;
    private javax.swing.JComboBox<String> cuscardCa;
    private javax.swing.JLabel dayout;
    private javax.swing.JLabel exMoney;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField phthree;
    private javax.swing.JTextField phtwo;
    private javax.swing.JButton printPrice_BUTT;
    private javax.swing.JTextField valuefix;
    // End of variables declaration//GEN-END:variables
}
