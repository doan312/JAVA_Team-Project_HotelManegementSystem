/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dong.hotel.check;

import dong.hotel.file.ExceptionReportSave;
import dong.hotel.file.Feedback;
//import dong.hotel.file.Feedback;
import dong.hotel.file.HotelPay;
import dong.hotel.file.RoomEmpty;
import dong.hotel.file.RoomStateSave;
import dong.hotel.file.Sfr200Process;
import dong.hotel.file.Sfr400Process;
import dong.hotel.mainmenu.MainMenu;
import dong.hotel.reservation.CustomerInfor;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nifskorea
 */
public class CheckOut extends javax.swing.JFrame {

    private ArrayList<CustomerInfor> customerinfor = new ArrayList<>();
    private ArrayList<RoomState> roomstate = new ArrayList<>();
    private ArrayList<CheckOutInformation> checkoutInformation = new ArrayList<>();
    private ArrayList<HotelRoomChargeInfor> roomchargeinfo = new ArrayList<>();

    private String roomFee = "";
    private String card = "";
    private String cardNum = "";
    private String cMonth = "";
    private String cYear = "";
    private String index = "";
    private String roomNum = "";
    private String over = "";
    private String extra = "";
    private String name = "";
    private String date = "";
    private String totalFee = "";
    private String select = "";

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Payment = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        cardLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cn1 = new javax.swing.JLabel();
        cn2 = new javax.swing.JLabel();
        cn3 = new javax.swing.JLabel();
        cn4 = new javax.swing.JLabel();
        Cyyyy = new javax.swing.JLabel();
        Cmm = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        feedTF = new javax.swing.JTextField();
        closeB = new javax.swing.JButton();
        payBUTT = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        roomFeeL = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        extraFeeL = new javax.swing.JLabel();
        chargeLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        cardB = new javax.swing.JButton();
        cashB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        roomTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        outTable = new javax.swing.JTable();
        searchBtn = new javax.swing.JButton();
        Back_BUTT = new javax.swing.JButton();
        checkoutBtn = new javax.swing.JButton();

        Payment.setMinimumSize(new java.awt.Dimension(800, 500));

        jLabel4.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jLabel4.setText("결제");

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "이름", "호실", "인원", "전화번호", "예상퇴실시간", "재실상태", "실제퇴실시간"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(paymentTable);
        if (paymentTable.getColumnModel().getColumnCount() > 0) {
            paymentTable.getColumnModel().getColumn(0).setMinWidth(20);
            paymentTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            paymentTable.getColumnModel().getColumn(1).setMinWidth(15);
            paymentTable.getColumnModel().getColumn(1).setPreferredWidth(15);
            paymentTable.getColumnModel().getColumn(2).setMinWidth(10);
            paymentTable.getColumnModel().getColumn(2).setPreferredWidth(10);
            paymentTable.getColumnModel().getColumn(4).setMinWidth(25);
            paymentTable.getColumnModel().getColumn(4).setPreferredWidth(25);
            paymentTable.getColumnModel().getColumn(5).setMinWidth(25);
            paymentTable.getColumnModel().getColumn(5).setPreferredWidth(25);
            paymentTable.getColumnModel().getColumn(6).setMinWidth(25);
            paymentTable.getColumnModel().getColumn(6).setPreferredWidth(25);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel8.setText("결제 방법");

        jLabel13.setText("카드 정보");

        cardLabel.setText("card");

        jLabel9.setText("카드번호");

        jLabel14.setText("유효기간");

        jLabel15.setText("/");

        jLabel10.setText("-");

        jLabel11.setText("-");

        jLabel12.setText("-");

        cn1.setText("1234");

        cn2.setText("5678");

        cn3.setText("1234");

        cn4.setText("5678");

        Cyyyy.setText("yyyy");

        Cmm.setText("mm");

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cardPanelLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cmm)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cyyyy, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cardPanelLayout.createSequentialGroup()
                        .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cardPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cardPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cn1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(7, 7, 7)
                                .addComponent(cn2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cn3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cn4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel9)
                    .addComponent(cn1)
                    .addComponent(cn2)
                    .addComponent(cn3)
                    .addComponent(cn4))
                .addGap(15, 15, 15)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(Cyyyy)
                    .addComponent(Cmm))
                .addContainerGap())
        );

        jLabel20.setText("고객 피드백");

        feedTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedTFActionPerformed(evt);
            }
        });

        closeB.setText("이전");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        payBUTT.setText("결제완료");
        payBUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBUTTActionPerformed(evt);
            }
        });

        jLabel6.setText("객실 요금");

        roomFeeL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        roomFeeL.setText("room");

        jLabel5.setText("추가 요금");

        extraFeeL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        extraFeeL.setText("extra");
        extraFeeL.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        chargeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chargeLabel.setText("total");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chargeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(extraFeeL, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(roomFeeL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(roomFeeL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(extraFeeL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(chargeLabel)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        cardB.setText("카드");
        cardB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardBActionPerformed(evt);
            }
        });

        cashB.setText("현금");
        cashB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardB, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cashB, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardB)
                .addGap(18, 18, 18)
                .addComponent(cashB)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PaymentLayout = new javax.swing.GroupLayout(Payment.getContentPane());
        Payment.getContentPane().setLayout(PaymentLayout);
        PaymentLayout.setHorizontalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(PaymentLayout.createSequentialGroup()
                            .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PaymentLayout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(59, 59, 59))
                                .addGroup(PaymentLayout.createSequentialGroup()
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)))
                            .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(feedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaymentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeB, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(payBUTT, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        PaymentLayout.setVerticalGroup(
            PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PaymentLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PaymentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeB)
                    .addComponent(payBUTT))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jLabel1.setText("체크아웃");

        jLabel2.setText("고객 이름");

        jLabel3.setText("호실");

        outTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "이름", "호실", "인원", "전화번호", "퇴실일", "퇴실시간", "재실상태"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        outTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(outTable);
        if (outTable.getColumnModel().getColumnCount() > 0) {
            outTable.getColumnModel().getColumn(0).setMinWidth(20);
            outTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            outTable.getColumnModel().getColumn(1).setMinWidth(20);
            outTable.getColumnModel().getColumn(1).setPreferredWidth(20);
            outTable.getColumnModel().getColumn(2).setMinWidth(10);
            outTable.getColumnModel().getColumn(2).setPreferredWidth(10);
            outTable.getColumnModel().getColumn(4).setMinWidth(35);
            outTable.getColumnModel().getColumn(4).setPreferredWidth(35);
            outTable.getColumnModel().getColumn(5).setMinWidth(30);
            outTable.getColumnModel().getColumn(5).setPreferredWidth(30);
            outTable.getColumnModel().getColumn(6).setMinWidth(25);
            outTable.getColumnModel().getColumn(6).setPreferredWidth(25);
        }

        searchBtn.setText("검색");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        Back_BUTT.setText("이전");
        Back_BUTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_BUTTActionPerformed(evt);
            }
        });

        checkoutBtn.setText("체크아웃");
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Back_BUTT, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkoutBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomTF, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(roomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_BUTT)
                    .addComponent(checkoutBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_BUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_BUTTActionPerformed
        MainMenu back = new MainMenu();
        back.setVisible(true);
        dispose();
    }//GEN-LAST:event_Back_BUTTActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed

        try {
            Sfr200Process cF = new Sfr200Process();
            cF.fRead();
            cF.sPlite();
            customerinfor = cF.returnGuestInfo();

            Sfr400Process rF = new Sfr400Process();
            rF.fRead();
            rF.sPlite();
            checkoutInformation = rF.returnCheckOutInformation();

            String aname = nameTF.getText();
            String room = roomTF.getText();
            String outDate = "";
            int caution = -1;

            DefaultTableModel model = (DefaultTableModel) outTable.getModel();
            model.setNumRows(0);

            for (int i = 0; i < checkoutInformation.size(); i++) {
                //호실 이름 둘다 입력한경우
                if (!room.equals("") && !aname.equals("")) {
                    if (checkoutInformation.get(i).getBooker().equals(aname) && checkoutInformation.get(i).getRoom().equals(room)) {
                        for (int j = 0; j < customerinfor.size(); j++) {
                            if (customerinfor.get(j).getRoomNum().equals(room)) {
                                outDate = String.format("%s-%s-%s", customerinfor.get(j).getcOutYear(), customerinfor.get(j).getcOutMonth(), customerinfor.get(j).getcOutDay());
                                roomFee = customerinfor.get(j).getRoomPrice();
                                card = customerinfor.get(j).getCard();
                                cardNum = customerinfor.get(j).getCardNum();
                                cMonth = customerinfor.get(j).getEndMonth();
                                cYear = customerinfor.get(j).getEndYear();
                                index = checkoutInformation.get(i).getNo();
                                if (checkoutInformation.get(i).getcOutDate().equals(outDate)) {
                                    model.insertRow(model.getRowCount(), new Object[]{
                                        checkoutInformation.get(i).getBooker(), checkoutInformation.get(i).getRoom(),
                                        checkoutInformation.get(i).getGuestNum(), customerinfor.get(j).getPhoneNum(), checkoutInformation.get(i).getcOutDate(),
                                        checkoutInformation.get(i).getOutTime(), checkoutInformation.get(i).getRoomState()
                                    });
                                    caution = 0;
                                }
                            }
                        }
                    }
                } //둘중하나 입력된 경우
                else if (!room.equals("") || !aname.equals("")) {
                    if (checkoutInformation.get(i).getBooker().equals(aname) || checkoutInformation.get(i).getRoom().equals(room)) {
                        for (int j = 0; j < customerinfor.size(); j++) {
                            if (customerinfor.get(j).getRoomNum().equals(checkoutInformation.get(i).getRoom())) {
                                outDate = String.format("%s-%s-%s", customerinfor.get(j).getcOutYear(), customerinfor.get(j).getcOutMonth(), customerinfor.get(j).getcOutDay());
                                roomFee = customerinfor.get(j).getRoomPrice();
                                card = customerinfor.get(j).getCard();
                                cardNum = customerinfor.get(j).getCardNum();
                                cMonth = customerinfor.get(j).getEndMonth();
                                cYear = customerinfor.get(j).getEndYear();
                                index = checkoutInformation.get(i).getNo();
                                if (checkoutInformation.get(i).getcOutDate().equals(outDate)) {
                                    model.insertRow(model.getRowCount(), new Object[]{
                                        checkoutInformation.get(i).getBooker(), checkoutInformation.get(i).getRoom(),
                                        checkoutInformation.get(i).getGuestNum(), customerinfor.get(j).getPhoneNum(), checkoutInformation.get(i).getcOutDate(),
                                        checkoutInformation.get(i).getOutTime(), checkoutInformation.get(i).getRoomState()
                                    });
                                    caution = 0;
                                }
                            }
                        }
                    }
                }
            }
            //잘못된 입력값 팝업
            if (caution != 0) {
                JOptionPane.showMessageDialog(null, "이름 또는 호실을 정확히 입력해주세요");
            }
        } catch (IOException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void feedTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feedTFActionPerformed

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed

        DefaultTableModel model2 = (DefaultTableModel) outTable.getModel();
        Sfr400Process co = new Sfr400Process();
        co.fRead();
        co.sPlite();

        int row = -1;
        try {
            row = outTable.getSelectedRow();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String d = df.format(System.currentTimeMillis());
            Date systemDate = df.parse(d);
            date = (String) model2.getValueAt(row, 4);
            Date cOutdate = df.parse(date);
            name = (String) model2.getValueAt(row, 0);
            roomNum = (String) model2.getValueAt(row, 1);
            String guest = (String) model2.getValueAt(row, 2);
            String phone = (String) model2.getValueAt(row, 3);
            String time = (String) model2.getValueAt(row, 5);
            String state = (String) model2.getValueAt(row, 6);
            String systemTime = new SimpleDateFormat("HH:mm").format(System.currentTimeMillis());
            if (cOutdate.compareTo(systemDate) == 0) {//현재날짜가 퇴실일이 아니라면
                JOptionPane.showMessageDialog(null, "퇴실일이 아닙니다.", "체크아웃", JOptionPane.ERROR_MESSAGE);
            } //else if(model2.getRowCount()==0){
            //   JOptionPane.showMessageDialog(null, "체크아웃 정보를 검색해주세요.", "체크아웃", JOptionPane.ERROR_MESSAGE);
            //}else if(row==0){
            //   JOptionPane.showMessageDialog(null, "체크아웃 정보를 선택해주세요.", "체크아웃", JOptionPane.ERROR_MESSAGE);
            // }
            else if (state == "empty") {//만약 체크아웃된 방이 검색에 안나오면 여긴 삭제
                JOptionPane.showMessageDialog(null, "이미 체크아웃했습니다.", "체크아웃", JOptionPane.ERROR_MESSAGE);
            } else {
                DefaultTableModel checkout = (DefaultTableModel) paymentTable.getModel();
                checkout.setNumRows(0);
                checkout.insertRow(checkout.getRowCount(), new Object[]{name, roomNum, guest, phone, time, state, systemTime});
                roomFeeL.setText(roomFee);
                String hour = new SimpleDateFormat("HH").format(System.currentTimeMillis());
                String min = new SimpleDateFormat("mm").format(System.currentTimeMillis());
                long first = Long.parseLong(roomFee);
                int m = Integer.parseInt(min);
                int h = Integer.parseInt(hour);
                long ef = 0;
                int a = -1;
                if (h > 10) {
                    a = h - 11;
                    if (m > 0) {
                        a++;
                        if (a == 0) {
                            over = String.format("%s분", Integer.toString(m));
                        } else {
                            over = String.format("%s시간%s분", Integer.toString(a), Integer.toString(m));
                        }
                    } else {
                        over = String.format("%s시간", Integer.toString(a));
                    }
                    ef = 10000 * a;
                } else {
                    ef = 0;
                }

                extra = Long.toString(ef);
                long total = first + ef;
                totalFee = Long.toString(total);
                extraFeeL.setText(extra);
                chargeLabel.setText(totalFee);
                cardLabel.setText(card);
                long num = Long.parseLong(cardNum);
                long n1 = num / 100000000;
                long n2 = n1 % 10000;
                long n3 = num % 100000000;
                long n4 = n3 % 10000;
                n1 = n1 / 10000;
                n3 = n3 / 10000;
                cn1.setText(Long.toString(n1));
                cn2.setText(Long.toString(n2));
                cn3.setText(Long.toString(n3));
                cn4.setText(Long.toString(n4));

                Cmm.setText(cMonth);
                Cyyyy.setText(cYear);

                cardPanel.setVisible(false);
                Payment.setVisible(true);
            }
        } catch (ParseException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkoutBtnActionPerformed

    private void cashBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashBActionPerformed
        // TODO add your handling code here:
        select = "현금";
        cardPanel.setVisible(false);
    }//GEN-LAST:event_cashBActionPerformed

    private void cardBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardBActionPerformed
        // TODO add your handling code here:
        select = "카드";
        cardPanel.setVisible(true);
    }//GEN-LAST:event_cardBActionPerformed

    private void payBUTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBUTTActionPerformed
        try {
            // TODO add your handling code here:
            //카드나 현금선택했다면 && 리뷰남겼다면
            // String feed ="";
            // feed=feedTF.getText();
            if (select.equals("카드") || select.equals("현금")) {

                if (!feedTF.getText().equals("")) {
                    RoomEmpty checkOut = new RoomEmpty();
                    checkOut.outguest(index, roomNum);
                    HotelPay money = new HotelPay();
                    money.InChargeInfo(roomNum, name, date, totalFee, select);
                    Feedback feed = new Feedback();
                   feed.InFeedInfo(feedTF.getText());
                    //이건 추가요금있는 경우만!
                    if (!over.equals("")) {
                        ExceptionReportSave report = new ExceptionReportSave();
                        report.InChargeInfo(roomNum, over, extra);
                    }
                    JOptionPane.showMessageDialog(null, "체크아웃 및 결제가 완료되었습니다.");
                    Payment.setVisible(false);
                    MainMenu back = new MainMenu();
                    back.setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "피드백을 남겨주세요", "", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "결제 방식을 선택해주세요.", "", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_payBUTTActionPerformed

    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        Payment.setVisible(false);
    }//GEN-LAST:event_closeBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_BUTT;
    private javax.swing.JLabel Cmm;
    private javax.swing.JLabel Cyyyy;
    private javax.swing.JDialog Payment;
    private javax.swing.JButton cardB;
    private javax.swing.JLabel cardLabel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JButton cashB;
    private javax.swing.JLabel chargeLabel;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JButton closeB;
    private javax.swing.JLabel cn1;
    private javax.swing.JLabel cn2;
    private javax.swing.JLabel cn3;
    private javax.swing.JLabel cn4;
    private javax.swing.JLabel extraFeeL;
    private javax.swing.JTextField feedTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTable outTable;
    private javax.swing.JButton payBUTT;
    private javax.swing.JTable paymentTable;
    private javax.swing.JLabel roomFeeL;
    private javax.swing.JTextField roomTF;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
